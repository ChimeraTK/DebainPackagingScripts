#!/bin/bash -e

WD=`pwd`

# load configuration
source config.sh

# load master-control file
if [ ! -f master-control ]; then
    echo "No master_control file found. Run the master script first."
    exit 1
fi
source master-control
PackageArchive=`eval echo $PackageArchive`

# check for local modifications in the DebianBuildVersions directory
${WD}/checkIfBuildVersionsCommitted || exit 1

# Check that there are debian packages and return an error if not
if [ ! -d pbuilder-result ]; then
    echo "No pbuilder-result directory found. Run the master script first."
    exit 1
fi
cd ${WD}/pbuilder-result/dists/${distribution}/main/binary-${arch}

# loop over all packages in the list (note: this is not the list of .deb files but the list of projects!)
for package in "${!package_buildcmd[@]}"; do

  # get the path to the control file from the build command (argument to makeDebianPackage)
  BUILD_CONTROL_FILE=`echo ${package_buildcmd[$package]} | sed -e "s|^./makeDebianPackage |${WD}/|"`/control
  
  # obtain list of package names from the control file and form wildcards to match the deb files
  TEMPFILE=`mktemp`
  grep "^Package: " ${BUILD_CONTROL_FILE} | sed -e 's|^Package: ||g' > $TEMPFILE
  PACKAGE_FILES_WILDCARDS_DEB=`cat $TEMPFILE | sed -e 's|$|_*.deb|g' | sed -e ':a;N;$!ba;s/\n/ /g'`
  rm $TEMPFILE
  
  # obtain source package name from the control file and form wildcards to match the changes file
  TEMPFILE=`mktemp`
  grep "^Source: " ${BUILD_CONTROL_FILE} | sed -e 's|^Source: ||g' > $TEMPFILE
  PACKAGE_FILES_WILDCARDS_CHANGES=`cat $TEMPFILE | sed -e 's|$|_*.changes|g' | sed -e ':a;N;$!ba;s/\n/ /g'`
  rm $TEMPFILE

  # merge the wildcards
  PACKAGE_FILES_WILDCARDS="${PACKAGE_FILES_WILDCARDS_DEB} ${PACKAGE_FILES_WILDCARDS_CHANGES}"
  

  # obtain content of Target-repositories variable from CONFIG file
  TARGET_REPOSITORIES=`grep '^Target-repositories: ' ${WD}/DebianBuildVersions/${package}/CONFIG | sed -e 's/^Target-repositories: //'`

  # Step 1: Remove an older version of the package
  # -- from the package archive
  # -- from the actual repository
  # This is done by writing a script, copying it to the InstallHost and executing it there.
  echo "${PACKAGE_FILES_WILDCARDS_DEB}"
  TEMPFILE=`mktemp -p .`
  echo "#!/bin/bash -e" > $TEMPFILE
  echo "cd ${PackageArchive}" >> $TEMPFILE
  echo "for p in ${PACKAGE_FILES_WILDCARDS_CHANGES}; do" >> $TEMPFILE
  echo "  if [ ! -f \"\$p\" ]; then continue ; fi" >> $TEMPFILE
  echo "  echo mv \"\$p\" ../old" >> $TEMPFILE
  echo "  mv \"\$p\" ../old" >> $TEMPFILE
  echo "done" >> $TEMPFILE
  echo "for p in ${PACKAGE_FILES_WILDCARDS_DEB}; do" >> $TEMPFILE
  echo "  if [ ! -f \"\$p\" ]; then continue ; fi" >> $TEMPFILE
  echo "  echo mv \"\$p\" ../old" >> $TEMPFILE
  echo "  mv \"\$p\" ../old" >> $TEMPFILE
  echo "  packname=\`echo \$p | sed -e 's|_.*\.deb$||'\`" >> $TEMPFILE
  for REPO in ${TARGET_REPOSITORIES}; do
    echo "  echo sudo -H reprepro --waitforlock 2 -Vb ${RepositoryDirectories[${REPO}]} remove ${distribution} \"\$packname\"" >> $TEMPFILE
    echo "  sudo -H reprepro --waitforlock 2 -Vb ${RepositoryDirectories[${REPO}]} remove ${distribution} \"\$packname\"" >> $TEMPFILE
  done
  echo "done" >> $TEMPFILE
  echo "rm \$HOME/$TEMPFILE" >> $TEMPFILE
  chmod +x $TEMPFILE
  scp $TEMPFILE ${InstallHost}:$TEMPFILE
  ssh ${InstallHost} $TEMPFILE
  rm $TEMPFILE

  # Step 2: Copy the files to the package archive
  scp ${PACKAGE_FILES_WILDCARDS} ${InstallHost}:${PackageArchive}

  # Step 3: Install to the repository
  for REPO in ${TARGET_REPOSITORIES}; do
      for FILE in ${PACKAGE_FILES_WILDCARDS_DEB}; do
          ssh ${InstallHost} sudo -H reprepro --waitforlock 2 -Vb \
              ${RepositoryDirectories[${REPO}]} includedeb ${distribution} \
              ${PackageArchive}/${FILE}
     done
  done
  
  # Remove just installed files from the local pbuilder-result directory
  rm ${PACKAGE_FILES_WILDCARDS}
  
done

# Everything installed: remove the entire pbuilder-result directory
cd ${WD}
rm -rf pbuilder-result master-control debian_package

